name: buildEnv_runPython


on:
  schedule:
    - cron: '0 0 * * *'  # 每天的第0小时运行

    
  workflow_dispatch:  # 支持手动触发

  
  # push:
  #   branches:
  #     - main  # 每次push到main分支时触发


jobs:
  buildEnv_runPython:
    runs-on: ubuntu-latest
    steps:


      # - name: Install curl
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y curl

      # # 测试直接访问
      # - name: Test Direct Access
      #   run: |
      #     echo "Testing direct access..."
      #     curl -v https://xn--cp3a08l.com/api/v1/client/subscribe?token=49cc907209a39bdcac4d26a28399f058

      # # 安装并配置 trojan
      # - name: Setup Trojan
      #   run: |
      #     # 下载 trojan
      #     wget https://github.com/trojan-gfw/trojan/releases/download/v1.16.0/trojan-1.16.0-linux-amd64.tar.xz
      #     tar xf trojan-1.16.0-linux-amd64.tar.xz
          
      #     # 查看解压后的文件结构
      #     ls -la
          
      #     # 进入 trojan 目录
      #     cd trojan
          
      #     # 创建配置文件
      #     cat > config.json << EOF
      #     {
      #         "run_type": "client",
      #         "local_addr": "127.0.0.1",
      #         "local_port": 1080,
      #         "remote_addr": "cn1.cdn.xfltd-cdn.top",
      #         "remote_port": 12001,
      #         "password": ["a984eec2-6f01-40e9-8a45-b17ca16d696a"],
      #         "log_level": 0,
      #         "ssl": {
      #             "verify": false,
      #             "verify_hostname": false,
      #             "sni": "cdn.alibaba.com"
      #         }
      #     }
      #     EOF
          
      #     # 显示 trojan 版本和配置
      #     ./trojan --version
      #     cat config.json
          
      #     # 启动 trojan
      #     ./trojan -c config.json &
      #     sleep 5  # 等待trojan启动

      # # 测试通过代理访问
      # - name: Test Proxy Access
      #   run: |
      #     echo "Testing access through proxy..."
      #     # 使用 curl 通过 socks5 代理访问，添加更多的调试信息
      #     curl -v -x socks5h://127.0.0.1:1080 https://xn--cp3a08l.com/api/v1/client/subscribe?token=49cc907209a39bdcac4d26a28399f058
          
      #     # 检查 trojan 是否在运行
      #     ps aux | grep trojan
          
      #     # 检查端口是否在监听
      #     netstat -tulpn | grep 1080


      # # 新增：检查网络环境步骤
      # - name: Check Network Environment
      #   run: |
      #     echo "============= Network Environment Check ============="
      #     echo "Current Time (UTC): $(date -u '+%Y-%m-%D %H:%M:%S')"
          
      #     echo -e "\n=== Current IP Address ==="
      #     curl -s ip.sb
          
      #     echo -e "\n=== IP Location Details ==="
      #     curl -s ipinfo.io | jq .
          
      #     echo -e "\n=== IP Geographic Info ==="
      #     curl -s http://ip-api.com/json | jq .

          
      #     # echo -e "\n=== Network Speed Test ==="
      #     # curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -

   
      - name: Checkout repository
        uses: actions/checkout@v3


      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml


      - name: Extract and run subconverter
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}  # 设置环境变量
        run: |
          curl -L -o subconverter_linux64.tar.gz $(curl -L -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $PERSONAL_TOKEN" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/tindy2013/subconverter/releases/latest | grep "browser_download_url" | grep "linux64[.]tar" | cut -d '"' -f 4)
          tar xzf subconverter_linux64.tar.gz
          chmod +x subconverter/subconverter
          nohup subconverter/subconverter &


      - name: runrun python
        env:

        
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_ACCOUNT_API_TOKEN: ${{ secrets.CF_ACCOUNT_API_TOKEN }}
          CF_KV_ID: ${{ secrets.CF_KV_ID }}
          CONVERT_PARAM: ${{ secrets.CONVERT_PARAM }}
          # PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          # GIST_ID: ${{ secrets.GIST_ID }}


        run: python converter_push.py

